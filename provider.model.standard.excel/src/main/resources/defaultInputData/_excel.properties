# This properties file allows the definition of the excel data source.
# The data source has to be defined for a specific existing (valid) data model.
# This is done, by property keys that start with the name of this valid model.
#
# At first, a excel file name must be defined:
#
# <name of valid model>.filename=<filename of the excel file>
#
# For excel files located in the same directory as this property file, no path has to be defined. 
# For an example see the settings below.
#
# At second, a class within the are defined by defining a 'matrix'.
# A matrix is a squared subset of data in the excel file.
# It is defined by a excel sheet within the excel file and the First Cell (upper left cell of the matrix).
# Number of rows and columns relative to this first cell is determined automatically.
# The lower end and the right end of the matrix is determined by the next empty cell. 
# A matrix is defined that way:
#
# <name of valid model>.matrix.<classname>=<number of sheet starting with 1>#<number of column of the first cell starting with 1>:#<number of row of the first cell starting with 1>
#
# For example:  
# TestModel.matrix.ExampleClass=1#1:1
#
# In this example the matrix starts in the first sheet with the first column and row.
# As alternative to the sheet number you can define the sheet name. 
#
# For example:  
# TestModel.matrix.ExampleClass=First Sheet#1:1
#
# Within a matrix attribute names are expected in the first column of each row.
# The first row of a matrix is expected to contain the names of the attribute metainfos.
# Thus, if the first cell is 1:1, the value of cell 2:2 defines the value of the metainfo 
# defined in cell 1:2 for the attribute defined in cell 1:2.
# See sheet 1 of TestDataExample.xlsx for an example.
#
# If your matrix is organized in the way, that rows and column has to be exchanged, you can do so my setting
# MOGLiCC_JavaBeanModel.ROTATION.MODE=Attributes in columns
# 
# The alternative rotation mode 'Attributes in rows' is default.
#
# Furthermore, it is possible to rename attribute names or names of MetaInfos of attributes, if they are not unique.
# This is done by the following setting: 
#
# <name of valid model>.rename.AttributeName.Occurrence.<old name of MetaInfo>.<number of occurence>=<new name>
# <name of valid model>.rename.AttributeMetaInfo.Occurrence.<old name of MetaInfo>.<number of occurence>=<new name>
#
# Example: Two metainfos 'Size' exist in the matrix. This could be solved like that:
# TestModel.rename.AttributeMetaInfo.Occurrence.size.1=ExpectedSize  # replaces first occurence of'size' to 'ExpectedSize'
# TestModel.rename.AttributeMetaInfo.Occurrence.size.2=ActualSize    # replaces second occurence of'size' to 'ActualSize'
#
# There exist problem: if the raw name to be replaced contains spaces or dots, parsing the property keys becomes difficult.
# Therefore, when searching for matches between properties and excel data, spaces and dots are ignored and removed for matching.
# Thus, avoid names with spaces and dots when you like to use the renaming feature.      
#
# If you want to allow multiple occurrences of MetaInfos names, you can do so by setting:
# <name of valid model>.AllowMetaInfoDoubles=true
#
# Finally, the matrix may not data represent for single class but for list of classes. For this purpose, 
# it is possible to define map a subset of the matrix onto separate classes.
# For example, class ExampleClassA is to mapped on attribute 2 in the matrix. This is done by
# 
# TestModel.matrix.ExampleClassA=1#1:1>2
#
# The symbol '>' stands for reducing the whole matrix to a subset. As another example, class ExampleClassB is to mapped onto the 5 attributes 
# from position 12 to 18 in the matrix:
# 
# TestModel.matrix.ExampleClassB=1#1:1>12-18
#
#
# FINAL NOTE:
# The variables defined in the model file of the StandardModelProvider, can also be used in this file!
#  


MOGLiCC_JavaBeanModel.filename=MOGLiCC_JavaBeanModel_Testdaten.xlsx
MOGLiCC_JavaBeanModel.AllowMetaInfoDoubles=true
MOGLiCC_JavaBeanModel.ROTATION.MODE=Attributes in columns

# read matrix from sheet one starting with cell B3.  
MOGLiCC_JavaBeanModel.matrix.<<DomainPath>>.Person=1#B:3   

# read matrix from sheet one starting with cell C21.  
MOGLiCC_JavaBeanModel.matrix.<<DomainPath>>.Address=1#C:21   

# read matrix from sheet one starting with cell C4.  
MOGLiCC_JavaBeanModel.matrix.<<DomainPath>>.Member=2#3:4
   
