package de.creditreform.crefoteam.ctl.bignet2boni.fachlichetests;

import java.math.BigDecimal;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

import de.creditreform.crefoteam.ctl.bignet2.codes.PaymentBehaviourCode;
import de.creditreform.crefoteam.ctl.bignet2boni.ExecStep;
import de.creditreform.crefoteam.ctl.bignet2boni.bonidata.BoniDataWrapper;
import de.creditreform.crefoteam.ctl.bignet2boni.bonidata.BoniDataWrapper.Boni2ErmittlungResult;
import de.creditreform.crefoteam.ctl.bignet2boni.enums.aaa.AaaKrediturteil;
import de.creditreform.crefoteam.ctl.bignet2boni.enums.aaa.AaaZahlungsweise;
import de.creditreform.crefoteam.ctl.bignet2boni.enums.aaa.AaaHoechstKrediturteil;
import de.creditreform.crefoteam.ctl.bignet2boni.steps.*;
import de.creditreform.crefoteam.ctl.bignet2boni.bonidata.ProduktSpezifischeConfigSettings;
import de.creditreform.crefoteam.ctl.bignet2boni.bonidata.ProduktSpezifischeConfigSettings.ReportType;
import de.creditreform.crefoteam.ctl.bignet2boni.bonidata.StandardBoni2Konfiguration;

/**
* Fachliche Tests fuer Schritt A6_PlausipruefungenAnwenden der CtlBignet2BoniErmittlung.
* Diese Klasse wurde aus den von Udo Cirkel spezifizierten Testdaten
* (siehe #Boni-Konzept_BIGNet2XML_CTL50172_Testfaelle.xlsx')
* autogeneriert.
*
* ACHTUNG: Nicht manuell aendern !
*
* @author generated by MOGLiCC
*/
public class A6_PlausipruefungenAnwenden_Test
{
	private ExecStep cut;
	private BoniDataWrapper boniData;

	@Before
	public void setup()
	{
		cut = new A6_PlausipruefungenAnwenden();  // class under test
		boniData = BoniDataWrapper.getNewInstance();

		final StandardBoni2Konfiguration boni2Konfiguration = new StandardBoni2Konfiguration();
		ProduktSpezifischeConfigSettings produktSpezifischeConfigSettings = new ProduktSpezifischeConfigSettings(ReportType.EXTENDED);
		boni2Konfiguration.setProduktSpezifischeConfigSettings(produktSpezifischeConfigSettings);
		boniData.config = boni2Konfiguration;
	}

	@Test
	public void executeTF_A6_1()
	{
		// arrange
		boniData.parameter.bix = new Integer(130);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_22");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_11");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(130) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_22");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_11");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_2()
	{
		// arrange
		boniData.parameter.bix = new Integer(150);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_22");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_11");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(150) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_22");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_21");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_3()
	{
		// arrange
		boniData.parameter.bix = new Integer(149);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_22");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_21");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(149) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_22");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_21");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_4()
	{
		// arrange
		boniData.parameter.bix = new Integer(149);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_22");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_31");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(149) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_22");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_21");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_5()
	{
		// arrange
		boniData.parameter.bix = new Integer(149);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_22");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_01");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(149) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_22");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_01");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_6()
	{
		// arrange
		boniData.parameter.bix = new Integer(274);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_43");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_21");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(274) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_43");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_21");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_7()
	{
		// arrange
		boniData.parameter.bix = new Integer(274);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_51");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_21");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(275) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_51");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_31");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_8()
	{
		// arrange
		boniData.parameter.bix = new Integer(274);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_51");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_01");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(275) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_51");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_31");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_9()
	{
		// arrange
		boniData.parameter.bix = new Integer(276);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_51");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_21");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(276) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_51");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_31");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_10()
	{
		// arrange
		boniData.parameter.bix = new Integer(339);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_01");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_41");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(340) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_29");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_41");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_11()
	{
		// arrange
		boniData.parameter.bix = new Integer(339);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_32");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_41");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(340) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_32");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_41");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_12()
	{
		// arrange
		boniData.parameter.bix = new Integer(341);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_41");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_41");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(341) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_41");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_41");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_13()
	{
		// arrange
		boniData.parameter.bix = new Integer(340);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_29");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_31");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(340) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_29");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_41");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_14()
	{
		// arrange
		boniData.parameter.bix = new Integer(340);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_11");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_41");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(340) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_29");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_41");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_15()
	{
		// arrange
		boniData.parameter.bix = new Integer(340);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_22");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_41");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(340) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_22");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_41");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_16()
	{
		// arrange
		boniData.parameter.bix = new Integer(439);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_29");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_31");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(439) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_29");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_41");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_17()
	{
		// arrange
		boniData.parameter.bix = new Integer(439);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_11");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_41");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(439) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_29");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_41");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_18()
	{
		// arrange
		boniData.parameter.bix = new Integer(439);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_22");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_41");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(439) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_22");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_41");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_19()
	{
		// arrange
		boniData.parameter.bix = new Integer(409);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_29");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_51");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(410) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_39");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_51");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_20()
	{
		// arrange
		boniData.parameter.bix = new Integer(411);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_29");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_51");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(411) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_39");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_51");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_21()
	{
		// arrange
		boniData.parameter.bix = new Integer(411);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_32");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_51");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(411) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_32");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_51");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_22()
	{
		// arrange
		boniData.parameter.bix = new Integer(440);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_39");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_31");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(440) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_39");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_41");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_23()
	{
		// arrange
		boniData.parameter.bix = new Integer(440);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_29");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_41");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(440) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_39");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_41");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_24()
	{
		// arrange
		boniData.parameter.bix = new Integer(440);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_32");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_41");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(440) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_32");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_41");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_25()
	{
		// arrange
		boniData.parameter.bix = new Integer(599);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_39");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_31");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(599) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_39");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_41");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_26()
	{
		// arrange
		boniData.parameter.bix = new Integer(599);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_29");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_41");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(599) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_39");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_41");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_27()
	{
		// arrange
		boniData.parameter.bix = new Integer(599);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_32");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_41");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(599) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_32");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_41");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_28()
	{
		// arrange
		boniData.parameter.bix = new Integer(600);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_39");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_51");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(600) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_39");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_61");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_29()
	{
		// arrange
		boniData.parameter.bix = new Integer(600);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_29");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_61");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(600) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_39");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_61");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_30()
	{
		// arrange
		boniData.parameter.bix = new Integer(600);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_32");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_61");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(600) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_32");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_61");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_31()
	{
		// arrange
		boniData.parameter.bix = new Integer(600);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_71");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_72");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(600) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_71");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_72");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_32()
	{
		// arrange
		boniData.parameter.bix = new Integer(599);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_39");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_61");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(600) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_39");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_61");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_33()
	{
		// arrange
		boniData.parameter.bix = new Integer(600);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_29");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_61");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(600) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_39");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_61");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_34()
	{
		// arrange
		boniData.parameter.bix = new Integer(600);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_32");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_61");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(600) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_32");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_61");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_35()
	{
		// arrange
		boniData.parameter.bix = new Integer(390);
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_11");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(390) ;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_29");
		final AaaKrediturteil expectedKU = null;
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_36()
	{
		// arrange
		boniData.parameter.bix = new Integer(390);
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_51");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = new Integer(410) ;
		final AaaZahlungsweise expectedZW = null;
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_51");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}

	@Test
	public void executeTF_A6_37()
	{
		// arrange
		boniData.parameter.zahlungsweise = AaaZahlungsweise.valueOf("_22");
		boniData.parameter.krediturteil = AaaKrediturteil.valueOf("_51");

		// act
		cut.exec(boniData);

		// assert
		final Integer expectedBix = null;
		final AaaZahlungsweise expectedZW = AaaZahlungsweise.valueOf("_39");
		final AaaKrediturteil expectedKU = AaaKrediturteil.valueOf("_51");
		final BigDecimal expectedHKV = null;
		final AaaHoechstKrediturteil expectedHKU = null;

		Assert.assertEquals("BIX", expectedBix, boniData.parameter.bix);
		Assert.assertEquals("Zahlungsweise", expectedZW, boniData.parameter.zahlungsweise);
		Assert.assertEquals("Krediturteil", expectedKU, boniData.parameter.krediturteil);
		Assert.assertEquals("Hoechstkreditvorschlag", expectedHKV, boniData.parameter.hoechstkreditvorschlag);
		Assert.assertEquals("Hoechstkrediturteil", expectedHKU, boniData.parameter.hoechstkrediturteil);
		Assert.assertEquals("Status", Boni2ErmittlungResult.OK.name(), boniData.status.name());
	}
}